name: Build and Deploy to GitHub Pages

concurrency:
  group: "pages"
  cancel-in-progress: true

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    env:
      APP_PASSWORD: ${{ secrets.SHARED_PASSWORD }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for required secrets
        run: |
          if [ -z "$APP_PASSWORD" ]; then
            echo "::error file=.github/workflows/deploy.yml::'SHARED_PASSWORD' secret not found."
            exit 1
          fi
          if [ -z "$FIREBASE_API_KEY" ]; then
            echo "::error file=.github/workflows/deploy.yml::'FIREBASE_API_KEY' secret not found."
            exit 1
          fi
          echo "âœ… All required secrets are present."

      - name: Create config.js from secrets
        run: |
          mkdir -p js
          echo "window.SHARED_PASSWORD = '$APP_PASSWORD';" > js/config.js
          echo "window.firebaseConfig = {" >> js/config.js
          echo "  apiKey: \"$FIREBASE_API_KEY\"," >> js/config.js
          echo "  authDomain: \"$FIREBASE_AUTH_DOMAIN\"," >> js/config.js
          echo "  projectId: \"$FIREBASE_PROJECT_ID\"," >> js/config.js
          echo "  storageBucket: \"$FIREBASE_STORAGE_BUCKET\"," >> js/config.js
          echo "  messagingSenderId: \"$FIREBASE_MESSAGING_SENDER_ID\"," >> js/config.js
          echo "  appId: \"$FIREBASE_APP_ID\"" >> js/config.js
          echo "};" >> js/config.js

      - name: Verify config.js creation
        run: |
          echo "Contents of generated js/config.js:"
          cat js/config.js

      - name: Create .nojekyll file
        run: touch .nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
